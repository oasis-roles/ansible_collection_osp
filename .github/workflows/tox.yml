name: Test with Ansible

on:
  push:
    paths-ignore:
      - README.md
      - LICENSE
      - galaxy.yml
      - AUTHORS
      - .github/labels.yml
      - .github/release-drafter.yml
  pull_request: {}
  schedule:
    - cron: '12 0 * * *'
  release:
    types:
      - published
      - prereleased

env:
  ANSIBLE_COLLECTIONS_PATHS: ~/.ansible/:~/work/
  checkout_path: ansible_collections/oasis_roles/osp

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.collection.outputs.tox-envs }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: pip-modules
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade pip
          pip install tox
      - name: lint
        run: |
          tox -e lint_all
      - name: collect depenencies
        id: collection
        uses: greg-hellings/tox-list@v1
        with:
          tox-args: --ansible-driver docker --ansible-driver podman

  build:
    needs: collect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJson(needs.collect.outputs.scenarios) }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: update submodules to latest
        run: |
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Setup pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: pip-modules
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade pip
          pip install tox tox-ansible
      - name: Run tox against ${{ matrix.scenario }}
        run: |
          set -ex
          # There is some magic in the "mv" command that makes ansible-galaxy work
          # I haven't found any logic for it, but if you don't do this mv, then
          # the dependency step in molecule when run from tox will fail
          mv ansible_collections ~/work/
          cd ~/work/${{ env.checkout_path }}
          tox -e ${{ matrix.scenario }}

  release:
    needs:  # Only release if the build is good
      - build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.6.2
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}
