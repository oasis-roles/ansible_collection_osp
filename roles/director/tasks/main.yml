# Tasks are insipred and named after the Red Hat OpenStack install directions.
# Those without x.y at the front are housekeeping bits for Ansible that are
# not derived from the RHOSP install docs
- name: ensure required values are set
  assert:
    that:
      - osp_director_templates is not none

- name: Creating directories for images
  become: "{{ osp_director_become }}"
  become_user: "{{ osp_director_become_user }}"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: stack
  with_items:
    - "{{ osp_director_stage }}/images"

- name: Installing the director packages
  become: "{{ osp_director_become }}"
  become_user: "{{ osp_director_become_user }}"
  block:
    - name: Install main Director packages
      package:
        name: "{{ osp_director_base_packages }}"
        state: present

    - name: install tempest-related packages
      package:
        name: "{{ osp_director_tempest_packages }}"
        state: present
      tags:
        - tempest

- name: Installing ceph-ansible
  become: "{{ osp_director_become }}"
  become_user: "{{ osp_director_become_user }}"
  block:
    # This is required if using ceph-ansible. Do not use the package that comes
    # from @rhel-7-server-openstack-13-rpms
    - name: Enable the Ceph Tools repository
      rhsm_repository:
        name: "{{ osp_ceph_repos }}"
        state: enabled

    - name: Install ceph-ansible
      package:
        name: ceph-ansible
        state: present
  when: osp_director_undercloud.install_ceph_ansible

- name: Installing the director
  become: true
  become_user: stack
  block:
    - name: Copy undercloud.conf to {{ osp_director_stage }}
      copy:
        src: "{{ osp_director_templates }}/undercloud.conf"
        dest: "{{ osp_director_stage }}/undercloud.conf"
        mode: preserve
        remote_src: true

    - name: openstack undercloud install
      command: openstack undercloud install
      changed_when: false
      register: _osp_install_undercloud
      until: _osp_install_undercloud is success
      poll: 300  # every 5 minutes

    - name: Add useful aliases for OpenStack
      become: true
      become_user: stack
      blockinfile:
        path: "{{ osp_director_stage }}/stackrc"
        create: true
        mode: 0755
        block: |-
          alias os="openstack"
          alias osp="openstack"

- name: Source stackrc
  become: true
  become_user: stack
  shell: |
    set -e
    source "{{ osp_director_stage }}/stackrc"
    env
  register: _osp_director_stackrc_output
  changed_when: false

- name: Store stackrc for later
  set_fact:
    osp_director_os_env_data: >-
      {{ _osp_director_stackrc_output.stdout
      | oasis_roles.osp.env_to_dict(only=osp_director_env_filters) }}

- name: Obtaining images for overcloud nodes
  become: true
  become_user: stack
  block:
    - name: Install rhosp-director-image packages
      become: "{{ osp_director_become }}"
      become_user: "{{ osp_director_become_user }}"
      package:
        name: "{{ osp_director_image_packages }}"
        state: present

    - name: Make {{ osp_director_stage }}/images directory
      file:
        path: "{{ osp_director_stage }}/images"
        state: directory
        mode: 0755

    - name: Untar image archives to {{ osp_director_stage }}/images
      unarchive:
        src: "{{ item }}"
        dest: "{{ osp_director_stage }}/images"
        remote_src: true
        mode: 0755
      loop: "{{ osp_director_image_archives }}"

    - name: Set root password for Overcloud image
      command: >-
        virt-customize -a {{ osp_director_stage }}/images/overcloud-full.qcow2
        --root-password password:{{
        osp_director_overcloud.overcloud_full_image_root_password }}
      changed_when: false
      when: "'overcloud_full_image_root_password' in osp_director_overcloud"

    - name: Upload images to Glance
      command: >-
        openstack overcloud image upload
        --image-path {{ osp_director_stage }}/images/ --update-existing
      environment: "{{ osp_director_os_env_data }}"

- name: Read subnet info
  become: true
  become_user: stack
  shell: |
    set -o pipefail
    openstack subnet list | grep ctlplane-subnet | awk '{print $2}' | xargs
  environment: "{{ osp_director_os_env_data }}"
  register: _osp_director_read_subnet_info
  changed_when: false

- name: Setting a nameserver for the control plane
  become: true
  become_user: stack
  command: >-
    openstack subnet set --no-dns-nameservers
    --dns-nameserver {{ osp_director_undercloud.nameservers
    | join(' --dns-nameserver ') }} {{ _osp_director_read_subnet_info.stdout }}
  environment: "{{ osp_director_os_env_data }}"
  changed_when: false
